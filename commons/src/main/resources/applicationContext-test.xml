<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd        
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.java4us"/>

    <cache:annotation-driven key-generator="cacheKeyGenerator"/>

    <aop:config proxy-target-class="true"/>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/java4us_test.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.db.driverClassName}"/>
        <property name="url" value="${jdbc.db.url}"/>
        <property name="username" value="${jdbc.db.username}"/>
        <property name="password" value="${jdbc.db.password}"/>
        <property name="maxWait" value="30000"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.java4us.domain"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgresPlusDialect</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="use_sql_comments">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="cacheKeyGenerator" class="com.java4us.commons.cache.CacheKeyGenerator"/>

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="com.java4us.commons.cache.MemcachedCache">
                    <constructor-arg name="name" value="default"/>
                    <constructor-arg name="cacheService" ref="cacheService"/>
                    <constructor-arg name="expiry" value="3600"/>
                </bean>
                <bean class="com.java4us.commons.cache.MemcachedCache">
                    <constructor-arg name="name" value="sixhourcache"/>
                    <constructor-arg name="cacheService" ref="cacheService"/>
                    <constructor-arg name="expiry" value="21600"/>
                </bean>
                <bean class="com.java4us.commons.cache.MemcachedCache">
                    <constructor-arg name="name" value="fifteenmincache"/>
                    <constructor-arg name="cacheService" ref="cacheService"/>
                    <constructor-arg name="expiry" value="900"/>
                </bean>
                <bean class="com.java4us.commons.cache.MemcachedCache">
                    <constructor-arg name="name" value="onedaycache"/>
                    <constructor-arg name="cacheService" ref="cacheService"/>
                    <constructor-arg name="expiry" value="86400"/>
                </bean>
                <bean class="com.java4us.commons.cache.MemcachedCache">
                    <constructor-arg name="name" value="fivemincache"/>
                    <constructor-arg name="cacheService" ref="cacheService"/>
                    <constructor-arg name="expiry" value="300"/>
                </bean>
            </set>
        </property>
    </bean>


    <bean id="couchBaseUri" class="java.net.URI">
        <constructor-arg value="${couchbase.pools}"/>
    </bean>

    <util:list id="couchBaseBucketList">
        <ref bean="couchBaseUri"/>
    </util:list>

    <bean id="couchbaseConnectionFactoryBuilder" class="com.couchbase.client.CouchbaseConnectionFactoryBuilder">
        <property name="opTimeout" value="${couchbase.optimeout}"/>
        <property name="opQueueMaxBlockTime" value="${couchbase.opqueuemaxblocktime}"/>
    </bean>


    <bean id="couchbaseClient" class="com.couchbase.client.CouchbaseClient">
        <constructor-arg name="cf">
            <bean factory-method="buildCouchbaseConnection" factory-bean="couchbaseConnectionFactoryBuilder">
                <constructor-arg name="baseList" ref="couchBaseBucketList"/>
                <constructor-arg name="bucketName" value="${couchbase.defaultbucket}"/>
                <constructor-arg name="pwd" value=""/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="java4UsCouchbaseClient" class="com.couchbase.client.CouchbaseClient">
        <constructor-arg name="cf">
            <bean factory-method="buildCouchbaseConnection" factory-bean="couchbaseConnectionFactoryBuilder">
                <constructor-arg name="baseList" ref="couchBaseBucketList"/>
                <constructor-arg name="bucketName" value="${couchbase.java4usbucket}"/>
                <constructor-arg name="pwd" value="${couchbase.java4us.pass}"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="cacheService" class="com.java4us.commons.cache.CacheService">
        <property name="couchbaseClient" ref="couchbaseClient"/>
    </bean>

    <bean id="java4UsCacheService" class="com.java4us.commons.cache.CacheService">
        <property name="couchbaseClient" ref="java4UsCouchbaseClient"/>
    </bean>

    <bean
            class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
            id="passwordEncoder"/>

    <bean id="saltSource"
          class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="id"/>
    </bean>

    <bean
            class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <bean id="cacheRegistry" class="com.java4us.commons.cache.CacheRegistry"
          scope="request">
        <aop:scoped-proxy/>
    </bean>

    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${email.host}"/>
        <property name="port" value="${email.port}"/>
        <property name="username" value="${email.username}"/>
        <property name="password" value="${email.password}"/>

        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${email.mail.smtp.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${email.mail.smtp.starttls.enable}</prop>
            </props>
        </property>
    </bean>

    <bean id="resetEmailTemplate"
          class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="java4usnet@gmail.com"/>
        <property name="subject" value="Java4Us.Net Password Reset"/>
        <property name="text">
            <value>
                <![CDATA[
                Hi %s,

                New password is ; %s

                Regards,
                Java4Us.Net Team..
		        ]]>
            </value>
        </property>
    </bean>

    <bean id="newFeederEmailTemplate"
          class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="java4usnet@gmail.com"/>
        <property name="subject" value="Welcome to Java4Us.Net"/>
        <property name="text">
            <value>
                <![CDATA[
                    Hi %s,

                    Welcome to Java4Us.Net, hope to get more readers from our web-site..

                    Regards,
                    Java4Us.Net Team..
		        ]]>
            </value>
        </property>
    </bean>

    <bean id="subscriberEmailTemplate"
          class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="info@java4us.net"/>
        <property name="subject" value="Weekly Newsletter : Recommended Feed Messages.."/>
        <property name="text">
            <value>
                <![CDATA[
                    Hi %s,

                    Welcome to Java4Us.Net, hope to get more readers from our web-site..

                    Regards,
                    Java4Us.Net Team..
		        ]]>
            </value>
        </property>
    </bean>

    <import resource="search/elasticsearch.xml"/>
</beans>
